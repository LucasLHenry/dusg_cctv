# this is a proof of concept function to make sure that it's not the output circuitry that's fucking things up
import matplotlib.pyplot as plt

exptable = [0.0000, 0.0248, 0.0501, 0.0762, 0.1028, 0.1301, 0.1581, 0.1868, 0.2162, 0.2463, 0.2772, 0.3088, 0.3412, 0.3744, 0.4085, 0.4433, 0.4791, 0.5157, 0.5533, 0.5917, 0.6311, 0.6715, 0.7129, 0.7554, 0.7988, 0.8434, 0.8890, 0.9358, 0.9838, 1.0329, 1.0832, 1.1348, 1.1877, 1.2419, 1.2974, 1.3543, 1.4126, 1.4723, 1.5336, 1.5963, 1.6606, 1.7265, 1.7940, 1.8632, 1.9341, 2.0068, 2.0813, 2.1576, 2.2358, 2.3159, 2.3980, 2.4822, 2.5684, 2.6568, 2.7474, 2.8402, 2.9353, 3.0328, 3.1326, 3.2350, 3.3399, 3.4473, 3.5575, 3.6703, 3.7860, 3.9045, 4.0260, 4.1505, 4.2780, 4.4087, 4.5427, 4.6800, 4.8206, 4.9648, 5.1125, 5.2639, 5.4190, 5.5780, 5.7409, 5.9078, 6.0789, 6.2542, 6.4339, 6.6180, 6.8067, 7.0000, 7.1981, 7.4012, 7.6092, 7.8224, 8.0409, 8.2648, 8.4943, 8.7294, 8.9704, 9.2173, 9.4703, 9.7296, 9.9954, 10.2677, 10.5467, 10.8327, 11.1257, 11.4260, 11.7338, 12.0491, 12.3723, 12.7035, 13.0429, 13.3906, 13.7470, 14.1123, 14.4865, 14.8701, 15.2631, 15.6659, 16.0786, 16.5016, 16.9350, 17.3792, 17.8343, 18.3008, 18.7788, 19.2686, 19.7706, 20.2850, 20.8121, 21.3523, 21.9059, 22.4732, 23.0545, 23.6502, 24.2607, 24.8863, 25.5274, 26.1844, 26.8576, 27.5475, 28.2545, 28.9790, 29.7215, 30.4823, 31.2620, 32.0610, 32.8798, 33.7188, 34.5787, 35.4598, 36.3628, 37.2881, 38.2363, 39.2080, 40.2038, 41.2243, 42.2700, 43.3416, 44.4397, 45.5651, 46.7183, 47.9001, 49.1111, 50.3522, 51.6239, 52.9272, 54.2627, 55.6314, 57.0339, 58.4711, 59.9440, 61.4533, 63.0000, 64.5850, 66.2093, 67.8738, 69.5795, 71.3274, 73.1187, 74.9543, 76.8353, 78.7630, 80.7383, 82.7627, 84.8371, 86.9629, 89.1414, 91.3738, 93.6615, 96.0059, 98.4083, 100.8702, 103.3931, 105.9785, 108.6279, 111.3429, 114.1251, 116.9763, 119.8980, 122.8922, 125.9604, 129.1047, 132.3268, 135.6288, 139.0125, 142.4800, 146.0334, 149.6748, 153.4063, 157.2303, 161.1490, 165.1648, 169.2799, 173.4970, 177.8186, 182.2472, 186.7854, 191.4361, 196.2019, 201.0857, 206.0905, 211.2193, 216.4750, 221.8609, 227.3803, 233.0363, 238.8323, 244.7720, 250.8587, 257.0961, 263.4881, 270.0383, 276.7508, 283.6295, 290.6785, 297.9021, 305.3047, 312.8905, 320.6642, 328.6305, 336.7940, 345.1597, 353.7326, 362.5178, 371.5206, 380.7464, 390.2006, 399.8889, 409.8172, 419.9914, 430.4176, 441.1020, 452.0509, 463.2711, 474.7691, 486.5518, 498.6264, 511.0000]
H = 255
M = 511

def main():
    x_vals = list(range(512))  # takes the place of shifted_acc
    shift = 128  # goes from 0 to 255
    linearity = 128 # goes from 0 to 255
    exp_vals = [exptri_gen(x_val) for x_val in x_vals]
    plt.plot(x_vals, exp_vals)
    
    log_vals = [logtri_gen(x_val) for x_val in x_vals]
    plt.plot(x_vals, log_vals)
    
    linshift_vals = [linshift_tri(x_val, linearity) for x_val in x_vals]
    plt.plot(x_vals, linshift_vals)
    plt.show()
    

def map(x, min1, max1, min2, max2):
    if min2 == max2:
        return min2
    return (x - min1) / (max1 - min1) * (max2 - min2) + min2

def tri_gen(acc):
    if acc < H:
        return acc * 2
    else:
        return (M - acc) * 2
    
def shark_gen(acc, shift):
    if acc < shift:
        return acc * 2
    else:
        return (M - acc) * 2

def slopeshift_gen(acc, shift):
    if acc < shift:
        return M * acc / shift
    else:
        return (M / (M - shift)) * (M - acc)

def exptri_gen(acc):
    if acc < H:
        return exptable[acc]
    elif acc == H:
        return M
    else:
        return exptable[H - acc]
    
def logtri_gen(acc):
    if acc < H:
        return M - exptable[H - acc]
    elif acc == H:
        return M
    else:
        return M - exptable[acc - H - 1]

def linshift_tri(acc, lin):
    if acc < H:
        logval = M - exptable[H - acc]
        expval = exptable[acc]
    elif acc == H:
        return M
    else:
        logval = M - exptable[acc - H - 1]
        expval = exptable[H - acc]
    return map(lin, 0, 255, expval, logval)
    # return (logval + expval) / 2

if __name__ == "__main__":
    main()
    